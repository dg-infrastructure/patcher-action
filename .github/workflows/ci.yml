name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: yarn
      - name: Run tests
        run: yarn test

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: yarn
      - name: Run tests
        run: yarn lint

  check-dist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: yarn
      - name: Rebuild the dist/ directory
        run: yarn build
      - name: Compare the expected and actual dist/ directories
        run: |
          if [ "$(git diff --ignore-space-at-eol dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build.  See status below:"
            git diff
            exit 1
          fi

  patcher-report:
    runs-on: ubuntu-latest
    outputs:
      dependencies: ${{ steps.run-report.outputs.dependencies }}
    steps:
      - uses: actions/checkout@v4
      - name: Patcher
        id: run-report
        uses: ./
        with:
          patcher_command: report
          working_dir: infrastructure-live
          spec_file: spec.json
          include_dirs: "{*dev*}/**"
      - uses: actions/upload-artifact@v4
        with:
          name: spec-file
          path: spec.json
# TODO - ideally run patcher upgrade with a dry-run (if thats possible?)
# - updates that would be performed
# - patches applied
# - PR would be opened
# jobs:
#   job1:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Create a file
#         run: echo "Hello World" > file.txt
#       - name: Upload file
#         uses: actions/upload-artifact@v3
#         with:
#           name: my-file
#           path: file.txt

#   job2:
#     needs: job1
#     runs-on: ubuntu-latest
#     steps:
#       - name: Download file
#         uses: actions/download-artifact@v3
#         with:
#           name: my-file
#       - name: Use the file
#         run: cat file.txt
